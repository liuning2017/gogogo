Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. 
Return the sum of the three integers. You may assume that each input would have exactly one solution.
For example, given array S = {-1 2 1 -4}, and target = 1. The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

public int threeSumClosest(int[] nums, int target) {
    Arrays.sort(nums);
    int minDiff = Integer.MAX_VALUE;
    int res = 0;
    for (int k = 0; k < nums.length - 2; k++) {
        int i = k + 1;
        int j = nums.length - 1;
        while (i < j) {   
            int sum = nums[k] + nums[i] + nums[j];
            int diff = Math.abs(target - sum);
            if (diff == 0) return sum;
            if (diff < minDiff) {
                minDiff = diff;
                res = sum;
            }
            
            if (sum < target) {
                int op = nums[i];
                while (i < j && nums[i] == op) i++;
            } else {
                int op = nums[j];
                while (i < j && nums[j] == op) j--;
            }
        }
    }

    return res;
}
