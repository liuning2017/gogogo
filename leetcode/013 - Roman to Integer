/**
         * Given a roman numeral, convert it to an integer. 
         * Input is guaranteed to be within the range from 1 to 3999.
         **/
        public int RomanToInt(string s)
        {
            Dictionary<char, int> map = new Dictionary<char, int>();
            map.Add('I', 1);
            map.Add('V', 5);
            map.Add('X', 10);
            map.Add('L', 50);
            map.Add('C', 100);
            map.Add('D', 500);
            map.Add('M', 1000);

            int result = 0;
            int lastNum = 0;
            for (int i = s.Length - 1; i >= 0; i--)
            {
                int num = map[s[i]];
                if (num < lastNum) result -= num;
                else result += num;
                lastNum = num;
            }

            return result;
        }
        
