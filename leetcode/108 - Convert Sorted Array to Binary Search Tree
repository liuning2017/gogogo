/**
         * Given an array where elements are sorted in ascending order, convert it to a height balanced BST.
        For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.
        Example:
        Given the sorted array: [-10,-3,0,5,9],
        One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:
              0
             / \
           -3   9
           /   /
         -10  5
         **/
        public TreeNode SortedArrayToBST(int[] nums)
        {
            if (nums == null || nums.Length == 0) return null;
            return GetBSTFromSortedArray(nums, 0, nums.Length - 1);
        }
        private static TreeNode GetBSTFromSortedArray(int[] nums, int start, int end)
        {
            if (start == end)
            {
                return new TreeNode(nums[start]);
            }

            int mid = (start + end) / 2;
            TreeNode node = new TreeNode(nums[mid]);
            if (mid > start) node.Left = GetBSTFromSortedArray(nums, start, mid - 1);
            if (mid < end) node.Right = GetBSTFromSortedArray(nums, mid + 1, end);
            return node;
        }
        
