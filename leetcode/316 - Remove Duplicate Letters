Given a string which contains only lowercase letters, remove duplicate letters so that every letter appear once and only once. 
You must make sure your result is the smallest in lexicographical order among all possible results.
Example: 
Given "bcabc", Return "abc"
Given "cbacdcbc", Return "acdb"

public String removeDuplicateLetters(String s) {
    if (s == null || s.length() == 0) return s;

    HashMap<Character, Integer> remaining = new HashMap<Character, Integer>();
    for (int i = 0; i < s.length(); i++) {
        char c = s.charAt(i);
        remaining.put(c, remaining.getOrDefault(c, 0) + 1);
    }

    Stack<Character> stack = new Stack<Character>();
    HashSet<Character> cis = new HashSet<Character>(); // Chars in Stack
    for (int i = 0; i < s.length(); i++) {
        char c = s.charAt(i);
        remaining.put(c, remaining.get(c) - 1);
        if (cis.contains(c)) continue;

        while (!stack.empty() && stack.peek() > c && remaining.get(stack.peek()) > 0) {
            cis.remove(stack.pop());    
        }
        stack.push(c);
        cis.add(c);
    }

    StringBuilder sb = new StringBuilder();
    while (!stack.empty()) sb.append(stack.pop());
    return sb.reverse().toString();
}
