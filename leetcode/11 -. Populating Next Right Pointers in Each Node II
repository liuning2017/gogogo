Given a binary tree
struct TreeLinkNode {
  TreeLinkNode *left;
  TreeLinkNode *right;
  TreeLinkNode *next;
}
Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.
Initially, all next pointers are set to NULL.

Example:
Given the following binary tree,
     1
   /  \
  2    3
 / \    \
4   5    7
After calling your function, the tree should look like:
     1 -> NULL
   /  \
  2 -> 3 -> NULL
 / \    \
4-> 5 -> 7 -> NULL

public void connect(TreeLinkNode root) {
    TreeLinkNode prev = root;
    while (prev != null) {
        TreeLinkNode dummy = new TreeLinkNode(0);
        TreeLinkNode node = dummy;
        while (prev != null) {
            if (prev.left != null) {
                node.next = prev.left;
                node = node.next;
            }
            if (prev.right != null) {
                node.next = prev.right;
                node = node.next;
            }
            prev = prev.next;
        }
        prev = dummy.next;
    }
}
