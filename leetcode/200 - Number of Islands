public int numIslands(char[][] grid) {
    if (grid == null || grid.length == 0 || grid[0] == null || grid[0].length == 0) return 0;
    int[][] directions = new int[4][];
    directions[0] = new int[] { -1, 0 };
    directions[1] = new int[] { 0, 1 };
    directions[2] = new int[] { 1, 0 };
    directions[3] = new int[] { 0, -1 };

    int result = 0;
    for (int i = 0; i < grid.length; i++)
        for (int j = 0; j < grid[0].length; j++)
            if (grid[i][j] == '1') {
                result++;
                markIsland(grid, directions, i, j);
            }

    return result;
}

private void markIsland(char[][] grid, int[][] directions, int r, int c) {
    if (r < 0 || c < 0 || r == grid.length || c == grid[0].length) return;
    if (grid[r][c] != '1') return;

    grid[r][c] = 'm';
    for (int[] direction : directions) {
        markIsland(grid, directions, r + direction[0], c + direction[1]);
    }
}
    
