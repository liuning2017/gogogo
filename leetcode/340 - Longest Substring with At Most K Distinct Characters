Given a string, find the length of the longest substring T that contains at most k distinct characters.
For example, Given s = “eceba” and k = 2, T is "ece" which its length is 3.

public int lengthOfLongestSubstringKDistinct(String s, int k) {
    HashMap<Character, Integer> hm = new HashMap<Character, Integer>();
    int start = 0;
    int result = 0;
    for (int i = 0; i < s.length(); i++) {
        char c = s.charAt(i);
        if (!hm.containsKey(c)) hm.put(c, 0);
        hm.put(c, hm.get(c) + 1);

        while (hm.size() > k) {
            char startChar = s.charAt(start);
            hm.put(startChar, hm.get(startChar) - 1);
            if (hm.get(startChar) == 0) hm.remove(startChar);
            start++;
        }

        result = Math.max(result, i - start + 1);
    }

    return result;
}
