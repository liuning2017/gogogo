public int maxAreaOfIsland(int[][] grid) {
    int[][] directions = new int[4][];
    directions[0] = new int[] {-1, 0};
    directions[1] = new int[] {0, 1};
    directions[2] = new int[] {1, 0};
    directions[3] = new int[] {0, -1};

    int[] area = new int[2];
    for (int i = 0; i < grid.length; i++)
        for (int j = 0; j < grid[0].length; j++) {
            if (grid[i][j] == 1) {
                area[0] = 0;
                countArea(directions, grid, i, j, area);
            }
        }

    return area[1];
}

private static void countArea(int[][] directions, int[][] grid, int r, int c, int[] area) {
    if (r < 0 || r >= grid.length || c < 0 || c >= grid[0].length) return;
    if (grid[r][c] != 1) return;
    grid[r][c] = -1;
    area[0]++;
    area[1] = Math.max(area[0], area[1]);
    for (int[] direction : directions) {
        countArea(directions, grid, r + direction[0], c + direction[1], area);
    }
}
