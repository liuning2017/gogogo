Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2.
Note:
The length of both num1 and num2 is < 110.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.

public String multiply(String num1, String num2) {
    if (num1 == null || num1.length() == 0 || num2 == null || num2.length() == 0) return "";
    if (num1.equals("0") || num2.equals("0")) return "0";

    int n1 = num1.length();
    int n2 = num2.length();
    int k = n1 + n2 - 2;
    int[] prod = new int[n1 + n2];    
    for (int i = 0; i < n1; i++)
        for (int j = 0; j < n2; j++)
             prod[k - i - j] += (num1.charAt(i) - '0') * (num2.charAt(j) - '0');

    k++;
    int carry = 0;
    String res = "";
    for (int i = 0; i <= k; i++) {
        prod[i] += carry;
        carry = prod[i] / 10;
        prod[i] %= 10;
        if (i < k || prod[i] != 0) res = String.valueOf(prod[i]) + res;
    }

    return res;
}
