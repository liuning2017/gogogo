Given n non-negative integers representing an elevation map where the width of each bar is 1, 
compute how much water it is able to trap after raining.
For example, Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.

public int trap(int[] heights) {
    if (heights == null || heights.length < 3) return 0;

    Stack<Integer> stack = new Stack<Integer>();
    int water = 0;
    int i = 0;
    while (i < heights.length) {
        if (stack.empty() || heights[i] <= heights[stack.peek()]) {
            stack.push(i++);
        } else {
            int t = stack.pop();
            if (stack.empty()) continue;
            int h = Math.min(heights[i], heights[stack.peek()]) - heights[t];
            int w = i - stack.peek() - 1;
            water += h * w;
        }
    }

    return water;
}
