Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
For example, given n = 3, a solution set is:
[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]

public List<String> generateParenthesis(int n) {
    List<String> res = new ArrayList<String>();
    doGenerateParenthesis(n, n, "", res);
    return res;
}

private void doGenerateParenthesis(int left, int right, String s, List<String> res) {
    if (left < 0 || right < 0 || left > right ) return;
    if (left == 0 && right == 0) {
        res.add(s);
        return;
    }
    doGenerateParenthesis(left - 1, right, s + "(", res);
    doGenerateParenthesis(left, right - 1, s + ")", res);
}
