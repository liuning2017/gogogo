Given a string S, return the "reversed" string where all characters that are not a letter stay in the same place, and all letters reverse their positions.

Example 1: Input: "ab-cd", Output: "dc-ba"
Example 2: Input: "a-bC-dEf-ghIj", Output: "j-Ih-gfE-dCba"
Example 3: Input: "Test1ng-Leet=code-Q!", Output: "Qedo1ct-eeLg=ntse-T!"
 
Note:
S.length <= 100, 
33 <= S[i].ASCIIcode <= 122, 
S doesn't contain \ or "

public String reverseOnlyLetters(String s) {
    if (s == null || s.length() == 0) return s;

    char[] cs = s.toCharArray();
    int i = 0;
    int j = cs.length - 1;
    while (i < j) {
        while (i < j && !Character.isLetter(cs[i])) i++;
        while (i < j && !Character.isLetter(cs[j])) j--;
        if (i < j) {
            swap(cs, i++, j--);
        }
    }

    return new String(cs);
}

private static void swap(char[] cs, int i, int j) {
    char c = cs[i];
    cs[i] = cs[j];
    cs[j] = c;
}
