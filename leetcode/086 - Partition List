Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.
You should preserve the original relative order of the nodes in each of the two partitions.

Example:
Input: head = 1->4->3->2->5->2, x = 3
Output: 1->2->2->4->3->5

public ListNode partition(ListNode head, int x) {        
    ListNode h1 = new ListNode(0);
    ListNode h2 = new ListNode(0);
    ListNode node1 = h1;
    ListNode node2 = h2;
    ListNode node = head;

    while (node != null) {
        if (node.val < x) {
            node1.next = node;
            node1 = node1.next;
        } else {
            node2.next = node;
            node2 = node2.next;
        }

        node = node.next;
    }

    node1.next = h2.next;
    node2.next = null;
    return h1.next;
}
