Given a stream of integers and a window size, calculate the moving average of all integers in the sliding window.

Example:
MovingAverage m = new MovingAverage(3);
m.next(1) = 1
m.next(10) = (1 + 10) / 2
m.next(3) = (1 + 10 + 3) / 3
m.next(5) = (10 + 3 + 5) / 3

class MovingAverage {
    Queue<Integer> q;
    int size = 0;
    int sum = 0;
    /** Initialize your data structure here. */
    public MovingAverage(int size) {
        this.size = size;
        q = new LinkedList<Integer>();
    }
    
    /*
    maintain a queue of size size
    */
    public double next(int val) {
        if(q.size() == size){
            int out = q.poll();
            q.offer(val);
            sum = sum - out + val;
            return (double)sum / size;
        }
        else {
            int count = q.size();
            q.offer(val);
            sum = sum + val;
            return (double)sum / (count+1);
        }  
    }
}

/**
 * Your MovingAverage object will be instantiated and called as such:
 * MovingAverage obj = new MovingAverage(size);
 * double param_1 = obj.next(val);
 */
