Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.
Note: You may assume k is always valid, 1 ≤ k ≤ BST's total elements.

public int kthSmallest(TreeNode root, int k) {
    Stack<TreeNode> stack = new Stack<TreeNode>();
    int i = 0;
    TreeNode node = root;
    while (true) {
        while (node != null) {
            stack.push(node);
            node = node.left;
        }

        if (stack.empty()) return 0;
        node = stack.pop();
        i++;
        if (i == k) return node.val;
        node = node.right;
    }
}
