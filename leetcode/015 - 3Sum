Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? 
Find all unique triplets in the array which gives the sum of zero.
Note: The solution set must not contain duplicate triplets.
For example, given array S = [-1, 0, 1, 2, -1, -4], a solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

public List<List<Integer>> threeSum(int[] nums) {
    List<List<Integer>> res = new ArrayList<List<Integer>>();
    if (nums == null || nums.length < 3) return res;

    Arrays.sort(nums);
    for (int k = 0; k < nums.length - 2; k++) {
        if (nums[k] > 0) break;
        if (k > 0 && nums[k] == nums[k - 1]) continue;

        int target = 0 - nums[k];
        int i = k + 1;
        int j = nums.length - 1;
        while (i < j) {
            int left = nums[i];
            int right = nums[j];
            if (left + right == target) {
                List<Integer> triplet = new ArrayList<Integer>();
                triplet.add(nums[k]);
                triplet.add(left);
                triplet.add(right);
                res.add(triplet);
                while (i < j && nums[i] == left) i++;
                while (i < j && nums[j] == right) j--;
            } else if (left + right < target) {
                while (i < j && nums[i] == left) i++;
            } else {
                while (i < j && nums[j] == right) j--;
            }
        }
    }

    return res;
}
