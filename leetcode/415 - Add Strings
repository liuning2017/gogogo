Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.
Note:
The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.

public String addStrings(String num1, String num2) {
    if (num1 == null || num2 == null) return null;
    StringBuilder sb = new StringBuilder();
    int i = num1.length() - 1;
    int j = num2.length() - 1;
    int carry = 0;
    while (i >= 0 || j >= 0) {
        int a1 = (i < 0) ? 0 : num1.charAt(i) - '0';
        int a2 = (j < 0) ? 0 : num2.charAt(j) - '0';
        int sum = a1 + a2 + carry;
        carry = sum / 10;
        sum %= 10;
        sb.append((char)(sum + '0'));
        i--;
        j--;
    }

    if (carry > 0) sb.append((char)(carry + '0'));
    return sb.reverse().toString();
}
