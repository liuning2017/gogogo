Given a binary tree, return all root-to-leaf paths.
Note: A leaf is a node with no children.
Example:
Input:
   1
 /   \
2     3
 \
  5
Output: ["1->2->5", "1->3"]

public List<String> binaryTreePaths(TreeNode root) {
    List<String> res = new ArrayList<String>();
    if (root == null) return res;
    populatePaths(root, "", res);
    return res;
}

private static void populatePaths(TreeNode node, String prefix, List<String> res) {
    prefix += "->" + String.valueOf(node.val);   
    if (node.left == null && node.right == null) {
        res.add(prefix.substring(2));
        return;
    }

    if (node.left != null) populatePaths(node.left, prefix, res);
    if (node.right != null) populatePaths(node.right, prefix, res);
}
