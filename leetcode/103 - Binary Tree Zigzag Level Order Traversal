public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
    List<List<Integer>> res = new ArrayList<List<Integer>>();
    if (root == null) return res;

    int level = 0;
    Stack<TreeNode> stack1 = new Stack<TreeNode>();
    Stack<TreeNode> stack2 = new Stack<TreeNode>();
    stack1.push(root);
    while (true) {
        List<Integer> list = new ArrayList<Integer>();
        if (level++ % 2 == 0) {
            while (!stack1.empty()) {
                TreeNode node = stack1.pop();
                list.add(node.val);
                if (node.left != null) stack2.push(node.left);
                if (node.right != null) stack2.push(node.right);
            }
        } else {
            while (!stack2.empty()) {
                TreeNode node = stack2.pop();
                list.add(node.val);
                if (node.right != null) stack1.push(node.right);
                if (node.left != null) stack1.push(node.left);
            }
        }

        res.add(list);
        if (stack1.empty() && stack2.empty()) break;
    }

    return res;
}
