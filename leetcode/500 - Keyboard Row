Given a List of words, 
return the words that can be typed using letters of alphabet on only one row's of American keyboard like the image below.
Example 1: Input: ["Hello", "Alaska", "Dad", "Peace"], Output: ["Alaska", "Dad"]
Note:
You may use one character in the keyboard more than once.
You may assume the input string will only contain letters of alphabet.

public String[] findWords(String[] words) {
    HashSet<Character> hs1 = new HashSet<Character>(Arrays.asList('q','w','e','r','t','y','u','i','o','p'));
    HashSet<Character> hs2 = new HashSet<Character>(Arrays.asList('a','s','d','f','g','h','j','k','l'));
    HashSet<Character> hs3 = new HashSet<Character>(Arrays.asList('z','x','c','v','b','n','m'));

    List<String> strs = new ArrayList<String>();
    for (String word : words) {
        String lowWord = word.toLowerCase();
        int one = 0, two = 0, three = 0;
        for (int i = 0; i < lowWord.length(); i++) {
            char c = lowWord.charAt(i);
            if (hs1.contains(c)) one = 1;
            if (hs2.contains(c)) two = 1;
            if (hs3.contains(c)) three = 1;
            if (one + two + three > 1) break;
        }
        if (one + two + three == 1)  strs.add(word);
    }

    String[] res = new String[strs.size()];
    strs.toArray(res);
    return res;
}
