Given four lists A, B, C, D of integer values, compute how many tuples (i, j, k, l) there are such that A[i] + B[j] + C[k] + D[l] is zero.
To make problem a bit easier, all A, B, C, D have same length of N where 0 ≤ N ≤ 500. 
All integers are in the range of -228 to 228 - 1 and the result is guaranteed to be at most 231 - 1.

public int fourSumCount(int[] a, int[] b, int[] c, int[] d) {
    int n = a.length;
    HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++) {
            int sum = a[i] + b[j];
            map.put(sum, map.getOrDefault(sum, 0) + 1);
        }

    int res = 0;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++) {
            int sum = 0 - c[i] - d[j];
            res += map.getOrDefault(sum, 0);
        }

    return res;
}
