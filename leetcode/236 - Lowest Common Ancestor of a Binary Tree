// Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.
public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
    if (root == null) return null;
    if (root == p || root == q) return root;

    TreeNode left = lowestCommonAncestor(root.left, p, q);
    if (left != null && left != p && left != q) return left;

    TreeNode right = lowestCommonAncestor(root.right, p, q);
    if (right != null && right != p && right != q) return right;

    if (left != null && right != null) return root;
    return left != null ? left : right;
}
        
