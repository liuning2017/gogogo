Given a string, you need to reverse the order of characters in each word within a sentence 
while still preserving whitespace and initial word order.
Example 1:
Input: "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Note: In the string, each word is separated by single space and there will not be any extra space in the string.

// This algorithm acutally handle the case where multiple spaces may exist.
public String reverseWords(String s) {
    if (s == null || s.length() == 0) return "";

    StringBuilder sb = new StringBuilder();
    int start = -1;
    boolean sawSpace = false;
    for (int i = 0; i < s.length(); i++) {
        if (s.charAt(i) == ' ') {
            if (!sawSpace) {
                sawSpace = true;
                reverseWord(s, start, i - 1, sb);
                start = -1;
            }
            sb.append(s.charAt(i));
        } else {
            if (start == -1) {
                start = i;
                sawSpace = false;
            }
            if (i == s.length() - 1) {
                reverseWord(s, start, i, sb);
            }
        }
    }

    return sb.toString();
}

private void reverseWord(String s, int start, int end, StringBuilder sb) {
    for (int i = end; i >= start; i--) {
        sb.append(s.charAt(i));
    }
}
