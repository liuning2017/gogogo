Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum â‰¥ s. 
If there isn't one, return 0 instead.

Example: 
Input: s = 7, nums = [2,3,1,2,4,3]
Output: 2
Explanation: the subarray [4,3] has the minimal length under the problem constraint.

public int minSubArrayLen(int s, int[] nums) {
    if (nums == null || nums.length == 0) return 0;

    int res = Integer.MAX_VALUE;
    int sum = 0;
    int i = 0;
    int j = 0;
    while (j < nums.length) {
        sum += nums[j++];
        while (sum >= s) {
            res = Math.min(res, j - i);
            sum -= nums[i++];
        }
    }

    return res == Integer.MAX_VALUE ? 0 : res;
}
