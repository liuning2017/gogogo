class MyQueue {
    private Stack<Integer> s1;
    private Stack<Integer> s2;
    
    /** Initialize your data structure here. */
    public MyQueue() {
        this.s1 = new Stack<Integer>();
        this.s2 = new Stack<Integer>();
    }
    
    /** Push element x to the back of queue. */
    public void push(int x) {
        this.s1.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    public int pop() {
        this.move();
        return s2.pop();
    }
    
    /** Get the front element. */
    public int peek() {
        this.move();
        return s2.peek();
    }
    
    /** Returns whether the queue is empty. */
    public boolean empty() {
        return s1.empty() && s2.empty();
    }
    
    private void move() {
        if (s2.empty()) {
            while (!s1.empty()) s2.push(s1.pop());
        }
    }
}
