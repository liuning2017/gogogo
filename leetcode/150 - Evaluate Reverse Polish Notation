Evaluate the value of an arithmetic expression in Reverse Polish Notation.
Valid operators are +, -, *, /. Each operand may be an integer or another expression.
Some examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6
  
public int evalRPN(String[] tokens) {
    Stack<Integer> stack = new Stack<Integer>();
    for (String token : tokens) {
        if (!token.equals("+") && !token.equals("-") && !token.equals("*") && !token.equals("/")) {
            stack.push(Integer.parseInt(token));
        } else {
            Integer op1 = stack.pop();
            Integer op2 = stack.pop();
            switch (token) {
                case "+": stack.push(op2 + op1); break;
                case "-": stack.push(op2 - op1); break;
                case "*": stack.push(op2 * op1); break;
                case "/": stack.push(op2 / op1); break;
            }
        }
    }

    return stack.pop();
}
