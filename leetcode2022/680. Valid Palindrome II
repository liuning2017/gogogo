Given a string s, return true if the s can be palindrome after deleting at most one character from it.

Example 1:
Input: s = "aba"
Output: true

Example 2:
Input: s = "abca"
Output: true
Explanation: You could delete the character 'c'.

Example 3:
Input: s = "abc"
Output: false
 
Constraints:
1 <= s.length <= 105
s consists of lowercase English letters.

class Solution {
  public boolean validPalindrome(String s) {
    int i = 0;
    int j = s.length() - 1;
    boolean flag = false;
    int lastI = i;
    int lastJ = j;
    
    while (i < j) {
      if (s.charAt(i) != s.charAt(j)) {
        if (!flag) {
          lastI = i;
          lastJ = j;
          i++;
          flag = true;
        } else {
          break;
        }
      } else {
        i++;
        j--;
      }
    }
    
    if (i >= j) return true;
    
    i = lastI;
    j = lastJ - 1;
    while (i < j) {
      if (s.charAt(i) != s.charAt(j)) {
        return false;
      } else {
        i++;
        j--;
      }
    }
    
    return true;
  }
}
