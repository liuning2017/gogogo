class Solution {
    public int trap(int[] height) {
      Stack<Integer> stack = new Stack();
      int result = 0;
      
      for (int i = 0; i < height.length; i++) {
        if (!stack.empty() && height[i] > height[stack.peek()]) {
          while (height[stack.peek()] < height[i]) {
            int bottom = height[stack.peek()];
            while (!stack.empty() && height[stack.peek()] == bottom) stack.pop();
            
            if (stack.empty()) {
              break;
            } else {
              result += (i - stack.peek() - 1) * (Math.min(height[i], height[stack.peek()]) - bottom);
            }
          }
        }
        
        stack.push(i);
      }
      
      return result;
    }
}
