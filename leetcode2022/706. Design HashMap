Design a HashMap without using any built-in hash table libraries.

Implement the MyHashMap class:
MyHashMap() initializes the object with an empty map.
void put(int key, int value) inserts a (key, value) pair into the HashMap. If the key already exists in the map, update the corresponding value.
int get(int key) returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.
void remove(key) removes the key and its corresponding value if the map contains the mapping for the key.

class MyHashMap {
  private static final int cap = 100000;
  private List<Pair>[] arr;
  
  public MyHashMap() {
    arr = new List[cap];
    Arrays.fill(arr, new ArrayList());
  }

  public void put(int key, int value) {
    int hash = key % cap;
    insert(arr[hash], key, value);
  }

  public int get(int key) {
    int hash = key % cap;
    List<Pair> list = arr[hash];
    int idx = search(list, 0, list.size() - 1, key);
    if (idx >= 0 && idx < list.size()) {
      Pair pair = list.get(idx);
      if (pair.key == key) return pair.val;
    }

    return -1;
  }

  public void remove(int key) {
    int hash = key % cap;
    List<Pair> list = arr[hash];
    int idx = search(list, 0, list.size() - 1, key);
    if (idx >= 0 && idx < list.size()) {
      Pair pair = list.get(idx);
      if (pair.key == key) list.remove(idx);
    }
  }
  
  private void insert(List<Pair> list, int key, int value) {
    int idx = search(list, 0, list.size() - 1, key);
    if (idx >= 0 && idx < list.size()) {
      Pair pair = list.get(idx);
      if (pair.key == key) {
        pair.val = value;
      } else {
        list.add(idx, new Pair(key, value));
      }
    } else {
      list.add(idx, new Pair(key, value));
    }
  }
  
  private int search(List<Pair> list, int start, int end, int key) {
    if (start > end) return start;
    
    int middle = (start + end) / 2;
    int mKey = list.get(middle).key;
    if (key == mKey) {
      return middle;
    } else if (key < mKey) {
      return search(list, start, end - 1, key);
    } else {
      return search(list, start + 1, end, key);
    }
  }
  
  private class Pair {
    public int key;
    public int val;
    public Pair (int key, int value) {
      this.key = key;
      this.val = value;
    }
  }
}

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap obj = new MyHashMap();
 * obj.put(key,value);
 * int param_2 = obj.get(key);
 * obj.remove(key);
 */
